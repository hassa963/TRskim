% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/encodeTR.R
\name{encodeTRs}
\alias{encodeTRs}
\title{Encoding Tandem Repeats}
\usage{
encodeTRs(decomposed_TRs, motifs)
}
\arguments{
\item{decomposed_TRs}{A character vector containing the decomposed tandem
repeats (ex. "-"  "-"  "AC" "AC" "GT" "AC")}

\item{motifs}{A character vector containing the motifs that may be in the TR}
}
\value{
Returns a list containing the encoded tandem repeats in $encoded and the
mapping of the motifs to their symbols in $map
}
\description{
A function that encodes decomposed tandem repeats such that each unique
motif is a single character symbol
}
\examples{
\dontrun{
decomposed_TR1 <- c("TTT", "AC", "AC", "GT", "AC")
decomposed_TR2 <- c("AC", "GT", "AC")
decomposed_TR3 <- c("CC", "AC", "GT", "AC", "GT")
decomposed_TRs <- list(decomposed_TR1, decomposed_TR2, decomposed_TR3)
motifs <- c("AC", "GT", "TTT", "CC")
encoded <- encodeTRs(decomposed_TRs, motifs)
encoded
$encoded
$encoded[[1]]
[1] "CAABA"

$encoded[[2]]
[1] "ABA"

$encoded[[3]]
[1] "DABAB"


$map
AC  GT TTT  CC
"A" "B" "C" "D"
}

}
\references{
OpenAI. ChatGPT (GPT-5) large language model (2025).https://chat.openai.com/

Park, J., Kaufman, E., Valdmanis, P. N. & Bafna, V. TRviz: A Python Library
for decomposing and Visualizing Tandem Repeat Sequences. Bioinformatics
Advances 3, (2023).
}
