% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/decomposeTR.R
\name{decomposeTRs}
\alias{decomposeTRs}
\title{Decomposition of Tandem Repeats}
\usage{
decomposeTRs(alleles, motifs, match = 1, indel = -1, allowence = 0)
}
\arguments{
\item{alleles}{DNAStringSet or character string vector of the Tandem repeats}

\item{motifs}{a vector of strings or a DNAStringSet that are the expected
motifs of the Tandem Repeat}

\item{match}{score for if motif matches sequence this is by default 1}

\item{indel}{score for if there is an insertion or deletion in sequence by
default this is -1}

\item{allowence}{is the number of mismatches between the motif
and the sequence permitted to be still be later encoded as a motif. By
default this is 0}
}
\value{
This function returns the tandem repeat alleles as a vector
decomposed into there motifs as character vectors.
For example, the allele \code{"ATATAT"} with motif \code{"AT"} is decomposed
into \code{c("AT", "AT", "AT")}.

If no motifs are found in an allele, the function returns \code{character(0)} for
that allele and prints a message to inform the user.

Any indels within the repeat are represented as \code{"-"} in the output vector.
Each \code{"-"} represents an indel the length of the preceding motif unit.
For example, \code{"ATATCAT"} with motif \code{"AT"} is decomposed into
\code{c("AT", "AT", "-", "AT")}.
}
\description{
A function that decomposes alleles into the supplied motifs given either a
character string vector or DNAStringSet of the alleles
}
\examples{
\dontrun{
##Example 1

library(Biostrings)
alleles <- DNAStringSet(c("TTTACACGTAC", "ACACGTAC", "TTACACGTAC" ))
motifs <- DNAStringSet(c("AC", "GT"))
compositions <- decomposeTRs(alleles, motifs)
compositions

###Expected:
[[1]]
[1] "-"  "-"  "AC" "AC" "GT" "AC"
[[2]]
[1] "AC" "AC" "GT" "AC"
[[3]]
[1] "-"  "AC" "AC" "GT" "AC"
}

}
\references{
PagÃ¨s, H., Aboyoun, P., Gentleman, R. & DebRoy, S. Biostrings: Efficient
manipulation of biological strings (R package version 2.77.2, 2025).
https://bioconductor.org/packages/Biostrings, doi:10.18129/B9.bioc.Biostrings

Park, J., Kaufman, E., Valdmanis, P. N. & Bafna, V. TRviz: A Python Library
for decomposing and Visualizing Tandem Repeat Sequences. Bioinformatics
Advances 3, (2023).
}
